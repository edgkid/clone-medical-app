{"ast":null,"code":"import '../peerjs.min.js';\nimport consumer from \"./consumer\";\nimport { broadcastData } from '../call_utils';\nvar me = {};\nvar myStream;\nvar peers = {};\nvar call = {};\nvar isStarted = false;\nvar chat_id;\nvar current_user_id;\n\nvar init = function init() {\n  navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia;\n  if (!navigator.getUserMedia) return unsupported();\n  getLocalAudioStream(function (err, stream) {\n    if (err || !stream) return;\n    connectToPeerJS(function (err) {\n      var _call, _call$peers;\n\n      if (err) return;\n      registerIdWithServer(me.id);\n      if ((_call = call) !== null && _call !== void 0 && (_call$peers = _call.peers) !== null && _call$peers !== void 0 && _call$peers.length) callPeers();else displayShareMessage();\n    });\n  });\n};\n\nvar connectToPeerJS = function connectToPeerJS(cb) {\n  // display('Connecting to PeerJS...');\n  me = new Peer({\n    host: 'medi-chat-peerserver.herokuapp.com',\n    debug: 1,\n    secure: true,\n    port: '',\n    path: '/peerjs/myapp'\n  });\n  me.on('call', handleIncomingCall);\n  me.on('open', function () {\n    // display('Connected.');\n    // display('ID: ' + me.id);\n    // console.log('aja', window.M)\n    initModal('.modal');\n    $('#finishcall').show();\n    $('#startcall').hide();\n    cb && cb(null, me);\n  });\n  me.on('error', function (err) {\n    // display(err);\n    cb && cb(err);\n    $('#startcall').prop('disabled', false);\n  });\n};\n\nvar initModal = function initModal(selector) {\n  var elems = document.querySelectorAll(selector);\n  var instances = M.Modal.init(elems, {});\n  M.Modal.getInstance(elems[0]).open();\n};\n\nvar registerIdWithServer = function registerIdWithServer() {\n  // display('Registering ID with server...');\n  // $.post('/' + call.id + '/addpeer/' + me.id);\n  broadcastData('/add_peer', {\n    call_id: chat_id,\n    peer_id: me.id,\n    current_user_id: current_user_id || Number($('.chat-box').data('user'))\n  });\n}; // Call each of the peer IDs using PeerJS\n\n\nvar callPeers = function callPeers() {\n  call.peers.forEach(callPeer);\n};\n\nvar callPeer = function callPeer(peerObjec) {\n  // display('Calling ' + peerId + '...');\n  if (peerObjec['peer_id'] === me.id) return;\n  var peer = getPeer(peerObjec['peer_id']);\n  peer.outgoing = me.call(peerObjec['peer_id'], myStream);\n  console.log('peer', peer);\n  peer.outgoing.on('error', function (err) {// display(err);\n  });\n  peer.outgoing.on('stream', function (stream) {\n    // display('Connected to ' + peerId + '.');\n    addIncomingStream(peer, stream);\n  });\n}; // When someone initiates a call via PeerJS\n\n\nvar handleIncomingCall = function handleIncomingCall(incoming) {\n  console.log('incoming', incoming); // display('Answering incoming call from ' + incoming.peer);\n\n  var peer = getPeer(incoming.peer);\n  peer.incoming = incoming;\n  incoming.answer(myStream);\n  peer.incoming.on('stream', function (stream) {\n    addIncomingStream(peer, stream);\n  });\n}; // Add the new audio stream. Either from an incoming call, or\n// from the response to one of our outgoing calls\n\n\nvar addIncomingStream = function addIncomingStream(peer, stream) {\n  // display('Adding incoming stream from ' + peer.id);\n  peer.incomingStream = stream;\n  playStream(stream);\n}; // Create an <audio> element to play the audio stream\n\n\nvar playStream = function playStream(stream) {\n  var audio = $('<audio autoplay />').appendTo('body');\n  console.log(window.URL);\n  audio[0].srcObject = stream;\n}; // Remove our ID from the call's list of IDs\n// function unregisterIdWithServer() {\n//   $.post('/' + call.id + '/removepeer/' + me.id);\n// }\n\n\nvar getLocalAudioStream = function getLocalAudioStream(cb) {\n  // display('Trying to access your microphone. Please click \"Allow\".');\n  navigator.getUserMedia({\n    video: false,\n    audio: true\n  }, function success(audioStream) {\n    // display('Microphone is open.');\n    myStream = audioStream;\n    if (cb) cb(null, myStream);\n  }, function error(err) {\n    // display('Couldn\\'t connect to microphone. Reload the page to try again.');\n    $('#startcall').prop('disabled', false);\n    if (cb) cb(err);\n  });\n}; ////////////////////////////////////\n// Helper functions\n\n\nvar getPeer = function getPeer(peerId) {\n  return peers[peerId] || (peers[peerId] = {\n    id: peerId\n  });\n};\n\nvar displayShareMessage = function displayShareMessage() {// display('Give someone this URL to chat.');\n  // display('<input type=\"text\" value=\"' + location.href + '\" readonly>');\n  // $('#display input').click(function() {\n  //   this.select();\n  // });\n};\n\nvar unsupported = function unsupported() {// display(\"Your browser doesn't support getUserMedia.\");\n};\n\nfunction display(message) {\n  $('<div />').html(message).appendTo('body');\n} // const initSubscription = () => {\n\n\nconsumer.subscriptions.create(\"CallChannel\", {\n  // broadcastData: broadcastData,\n  connected: function connected() {// Called when the subscription is ready for use on the server\n    // console.log('11111111111111111111')\n    // thisUserId = $('#chat').data('user')\n    // this.broadcastData({ type: JOIN_CALL, from: thisUserId});\n  },\n  disconnected: function disconnected() {// Called when the subscription has been terminated by the server\n  },\n  received: function received(data) {\n    if ((data === null || data === void 0 ? void 0 : data.action) == 'newCall' && !isStarted) {\n      initModal('#incomingCall');\n    } else {\n      var _call2, _call2$peers;\n\n      if (!isStarted) return;\n      call = data === null || data === void 0 ? void 0 : data.call;\n\n      if (data == null && me) {\n        myStream.getTracks().forEach(function (track) {\n          track.stop();\n        });\n        call = {};\n        isStarted = false;\n        $('#finishcall').hide();\n        $('#startcall').show();\n      }\n\n      console.log(call, data);\n      if ((_call2 = call) !== null && _call2 !== void 0 && (_call2$peers = _call2.peers) !== null && _call2$peers !== void 0 && _call2$peers.length && me.call) callPeers();\n    }\n  }\n}); // }\n\n$(document).on('turbolinks:load', function () {\n  if (!document.getElementById('chat-box')) return;\n  call = call || {};\n  $('#finishcall').hide();\n  chat_id = Number($('.chat-box').data('chat'));\n  current_user_id = current_user_id || Number($('.chat-box').data('user'));\n  $('#startcall').on('click', function (e) {\n    e.preventDefault();\n    initCall(true);\n  });\n  $('#incomingCallButton').on('click', function (e) {\n    e.preventDefault();\n    initCall();\n  });\n  $('.close-call').on('click', function (e) {\n    closeCall();\n  });\n  $('#finishcall').on('click', function () {\n    closeCall();\n  });\n});\n\nvar closeCall = function closeCall() {\n  isStarted = false;\n  call = {};\n  myStream.getTracks().forEach(function (track) {\n    track.stop();\n  });\n  $('#finishcall').hide();\n  $('#startcall').show();\n  broadcastData('/finish', {\n    call_id: chat_id || Number($('.chat-box').data('chat')),\n    current_user_id: current_user_id || Number($('.chat-box').data('user'))\n  });\n};\n\nvar initCall = function initCall() {\n  var newCall = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  console.log(call, chat_id);\n  call.id = chat_id || Number($('.chat-box').data('chat'));\n  isStarted = true;\n  $('#startcall').prop('disabled', true);\n  broadcastData('/new', {\n    call_id: chat_id || Number($('.chat-box').data('chat')),\n    current_user_id: current_user_id || Number($('.chat-box').data('user')),\n    new_call: newCall\n  });\n  init();\n};","map":{"version":3,"sources":["/home/edgar/Escritorio/AppMedica/medical/app/javascript/channels/call_channel.js"],"names":["consumer","broadcastData","me","myStream","peers","call","isStarted","chat_id","current_user_id","init","navigator","getUserMedia","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","unsupported","getLocalAudioStream","err","stream","connectToPeerJS","registerIdWithServer","id","length","callPeers","displayShareMessage","cb","Peer","host","debug","secure","port","path","on","handleIncomingCall","initModal","$","show","hide","prop","selector","elems","document","querySelectorAll","instances","M","Modal","getInstance","open","call_id","peer_id","Number","data","forEach","callPeer","peerObjec","peer","getPeer","outgoing","console","log","addIncomingStream","incoming","answer","incomingStream","playStream","audio","appendTo","window","URL","srcObject","video","success","audioStream","error","peerId","display","message","html","subscriptions","create","connected","disconnected","received","action","getTracks","track","stop","getElementById","e","preventDefault","initCall","closeCall","newCall","new_call"],"mappings":"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","sourcesContent":["import '../peerjs.min.js'\nimport consumer from \"./consumer\"\nimport { broadcastData } from '../call_utils'\n\nvar me = {};\nvar myStream;\nvar peers = {};\nvar call = {}\nvar isStarted = false;\nvar chat_id;\nvar current_user_id;\n\nconst init = () => { \n  navigator.getUserMedia = \n    (navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia);\n\n  if (!navigator.getUserMedia) return unsupported();\n\n  getLocalAudioStream(function(err, stream) {\n    if (err || !stream) return;\n\n    connectToPeerJS(function(err) {\n      if (err) return;\n      registerIdWithServer(me.id);\n      if (call?.peers?.length) callPeers();\n      else displayShareMessage();\n    });\n  });\n}\n\n\nconst connectToPeerJS = (cb) => {\n  // display('Connecting to PeerJS...');\n  me = new Peer({\n    host: 'medi-chat-peerserver.herokuapp.com',\n    debug: 1,\n    secure: true,\n    port: '',\n    path: '/peerjs/myapp'\n  });\n\n  me.on('call', handleIncomingCall);\n  \n  me.on('open', function() {\n    // display('Connected.');\n    // display('ID: ' + me.id);\n    // console.log('aja', window.M)\n    initModal('.modal')\n    $('#finishcall').show()\n    $('#startcall').hide()\n\n\n    cb && cb(null, me);\n  });\n  \n  me.on('error', function(err) {\n    // display(err);\n    cb && cb(err);\n    $('#startcall').prop('disabled', false);\n  });\n}\n\nconst initModal = (selector) => {\n  var elems = document.querySelectorAll(selector);\n  var instances = M.Modal.init(elems, {});\n  M.Modal.getInstance(elems[0]).open();\n}\n\n\n\nconst registerIdWithServer = () => {\n  // display('Registering ID with server...');\n  // $.post('/' + call.id + '/addpeer/' + me.id);\n  broadcastData('/add_peer', {\n    call_id: chat_id,\n    peer_id: me.id,\n    current_user_id: current_user_id || Number($('.chat-box').data('user'))\n  })\n} \n\n// Call each of the peer IDs using PeerJS\nconst callPeers = () => {\n  call.peers.forEach(callPeer);\n}\n\nconst callPeer = (peerObjec) => {\n  // display('Calling ' + peerId + '...');\n  if(peerObjec['peer_id'] === me.id) return;\n\n  var peer = getPeer(peerObjec['peer_id']);\n  peer.outgoing = me.call(peerObjec['peer_id'], myStream);\n  console.log('peer', peer)\n\n  peer.outgoing.on('error', function(err) {\n    // display(err);\n  });\n\n  peer.outgoing.on('stream', function(stream) {\n    // display('Connected to ' + peerId + '.');\n    addIncomingStream(peer, stream);\n  });\n}\n\n// When someone initiates a call via PeerJS\nconst handleIncomingCall = (incoming) => {\n  console.log('incoming', incoming)\n  // display('Answering incoming call from ' + incoming.peer);\n  var peer = getPeer(incoming.peer);\n  peer.incoming = incoming;\n  incoming.answer(myStream);\n  peer.incoming.on('stream', function(stream) {\n    addIncomingStream(peer, stream);\n  });\n}\n\n// Add the new audio stream. Either from an incoming call, or\n// from the response to one of our outgoing calls\nconst addIncomingStream = (peer, stream) => {\n  // display('Adding incoming stream from ' + peer.id);\n  peer.incomingStream = stream;\n  playStream(stream);\n}\n\n\n// Create an <audio> element to play the audio stream\nconst playStream = (stream) => {\n  var audio = $('<audio autoplay />').appendTo('body');\n  console.log(window.URL)\n  audio[0].srcObject = stream;\n}\n\n\n// Remove our ID from the call's list of IDs\n// function unregisterIdWithServer() {\n//   $.post('/' + call.id + '/removepeer/' + me.id);\n// }\n\nconst getLocalAudioStream = (cb) => {\n  // display('Trying to access your microphone. Please click \"Allow\".');\n\n  navigator.getUserMedia (\n    {video: false, audio: true},\n\n    function success(audioStream) {\n      // display('Microphone is open.');\n      myStream = audioStream;\n      if (cb) cb(null, myStream);\n    },\n\n    function error(err) {\n      // display('Couldn\\'t connect to microphone. Reload the page to try again.');\n      $('#startcall').prop('disabled', false);\n      if (cb) cb(err);\n    }\n  );\n}\n\n\n\n\n////////////////////////////////////\n// Helper functions\nconst getPeer = (peerId) => {\n  return peers[peerId] || (peers[peerId] = {id: peerId});\n}\n\nconst displayShareMessage = () => {\n  // display('Give someone this URL to chat.');\n  // display('<input type=\"text\" value=\"' + location.href + '\" readonly>');\n  \n  // $('#display input').click(function() {\n  //   this.select();\n  // });\n}\n\nconst unsupported = () => {\n  // display(\"Your browser doesn't support getUserMedia.\");\n}\n\nfunction display(message) {\n  $('<div />').html(message).appendTo('body');\n}\n\n\n\n// const initSubscription = () => {\n  consumer.subscriptions.create(\"CallChannel\", {\n    // broadcastData: broadcastData,\n    connected() {\n      // Called when the subscription is ready for use on the server\n      // console.log('11111111111111111111')\n      // thisUserId = $('#chat').data('user')\n      // this.broadcastData({ type: JOIN_CALL, from: thisUserId});\n    },\n\n    disconnected() {\n      // Called when the subscription has been terminated by the server\n    },\n  \n    received: (data) => {\n      if(data?.action == 'newCall' && !isStarted) {\n        initModal('#incomingCall')\n      } else {\n\n        if(!isStarted) return;\n\n        call = data?.call\n\n        if(data == null  && me){\n          myStream.getTracks().forEach(function(track) {\n            track.stop();\n          }); \n          call = {}\n          isStarted = false\n          $('#finishcall').hide()\n          $('#startcall').show()      \n        }\n        console.log(call, data)\n\n        if (call?.peers?.length && me.call) callPeers();\n      }\n    }\n  });\n// }\n\n$(document).on('turbolinks:load', () => {\n\n  if(!document.getElementById('chat-box'))\n    return\n\n  call = call || {}\n\n  $('#finishcall').hide()\n  \n  chat_id = Number($('.chat-box').data('chat'))\n  current_user_id = current_user_id || Number($('.chat-box').data('user'))\n\n  $('#startcall').on('click', (e) => {\n    e.preventDefault()\n    initCall(true)\n  })\n\n  $('#incomingCallButton').on('click', (e) => {\n    e.preventDefault()\n    initCall()\n  })\n\n  \n\n  $('.close-call').on('click', (e) => {\n    closeCall()\n  })\n\n\n  $('#finishcall').on('click', () => {\n    closeCall()\n  })\n\n})\n\n\nconst closeCall = () => {\n  isStarted = false\n  call = {}\n  myStream.getTracks().forEach(function(track) {\n    track.stop();\n  });\n\n  $('#finishcall').hide()\n  $('#startcall').show()      \n\n  broadcastData('/finish', {\n    call_id: chat_id || Number($('.chat-box').data('chat')),\n    current_user_id: current_user_id || Number($('.chat-box').data('user')),\n  })\n}\nconst initCall = (newCall = false) => {\n  console.log(call, chat_id)\n  call.id = chat_id || Number($('.chat-box').data('chat'))\n  isStarted = true\n\n  $('#startcall').prop('disabled', true);\n  broadcastData('/new', {\n    call_id: chat_id || Number($('.chat-box').data('chat')),\n    current_user_id: current_user_id || Number($('.chat-box').data('user')),\n    new_call: newCall\n  })\n\n  init()\n}\n"]},"metadata":{},"sourceType":"module"}